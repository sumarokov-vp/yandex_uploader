from _typeshed import Incomplete

class YaDiskError(Exception):
    error_type: Incomplete
    response: Incomplete
    def __init__(self, error_type: Incomplete | None = ..., msg: str = ..., response: Incomplete | None = ...) -> None: ...

class WrongResourceTypeError(YaDiskError):
    def __init__(self, msg: str = ...) -> None: ...

class RetriableYaDiskError(YaDiskError): ...

class UnknownYaDiskError(RetriableYaDiskError):
    def __init__(self, msg: str = ..., response: Incomplete | None = ...) -> None: ...

class BadRequestError(YaDiskError): ...
class UnauthorizedError(YaDiskError): ...
class ForbiddenError(YaDiskError): ...
class NotFoundError(YaDiskError): ...
class NotAcceptableError(YaDiskError): ...
class ConflictError(YaDiskError): ...
class PayloadTooLargeError(YaDiskError): ...
class UnsupportedMediaError(YaDiskError): ...
class LockedError(YaDiskError): ...
class UploadTrafficLimitExceededError(LockedError): ...
class TooManyRequestsError(YaDiskError): ...
class InternalServerError(RetriableYaDiskError): ...
class BadGatewayError(RetriableYaDiskError): ...
class UnavailableError(RetriableYaDiskError): ...
class GatewayTimeoutError(RetriableYaDiskError): ...
class InsufficientStorageError(YaDiskError): ...
class PathNotFoundError(NotFoundError): ...
class ParentNotFoundError(ConflictError): ...
class PathExistsError(ConflictError): ...
class DirectoryExistsError(PathExistsError): ...
class FieldValidationError(BadRequestError): ...
class ResourceIsLockedError(LockedError): ...
class MD5DifferError(ConflictError): ...
class OperationNotFoundError(NotFoundError): ...
class InvalidResponseError(YaDiskError): ...
