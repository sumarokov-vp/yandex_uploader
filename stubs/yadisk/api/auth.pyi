import requests
from ..objects import TokenObject, TokenRevokeStatusObject
from .api_request import APIRequest
from typing import Optional

class RefreshTokenRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, refresh_token: str, client_id: str, client_secret: str, **kwargs) -> None: ...
    def process_args(self, refresh_token: str, client_id: str, client_secret: str) -> None: ...
    def process_json(self, js: Optional[dict]) -> TokenObject: ...

class RevokeTokenRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, token: str, client_id: str, client_secret: str, **kwargs) -> None: ...
    def process_args(self, token: str, client_id: str, client_secret: str) -> None: ...
    def process_json(self, js: Optional[dict]) -> TokenRevokeStatusObject: ...

class GetTokenRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, code: str, client_id: str, client_secret: str, device_id: Optional[str] = ..., device_name: Optional[str] = ..., **kwargs) -> None: ...
    def process_args(self, code: str, client_id: str, client_secret: str, device_id: Optional[str], device_name: Optional[str]) -> None: ...
    def process_json(self, js: Optional[dict]) -> TokenObject: ...
