import requests
from ..compat import Iterable
from ..objects import FilesResourceListObject, LastUploadedResourceListObject, OperationLinkObject, PublicResourceObject, PublicResourcesListObject, ResourceDownloadLinkObject, ResourceLinkObject, ResourceObject, ResourceUploadLinkObject, TrashResourceObject
from ..yadisk import YaDisk
from .api_request import APIRequest
from _typeshed import Incomplete
from typing import Optional, Union

Fields = Iterable[str]

class GetPublicResourcesRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, offset: int = ..., limit: int = ..., preview_size: Optional[str] = ..., preview_crop: Optional[bool] = ..., type: Optional[str] = ..., fields: Optional[Iterable[str]] = ..., **kwargs) -> None: ...
    def process_args(self, offset: int, limit: int, preview_size: Optional[str], preview_crop: Optional[bool], type: Optional[str], fields: Optional[Iterable[str]]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> PublicResourcesListObject: ...

class UnpublishRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, path: str, fields: Optional[Iterable[str]] = ..., **kwargs) -> None: ...
    def process_args(self, path: str, fields: Optional[Iterable[str]]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> ResourceLinkObject: ...

class GetDownloadLinkRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, path: str, fields: Optional[Iterable[str]] = ..., **kwargs) -> None: ...
    def process_args(self, path: str, fields: Optional[Iterable[str]]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> ResourceDownloadLinkObject: ...

class GetTrashRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, path: str, offset: int = ..., limit: int = ..., sort: Optional[str] = ..., preview_size: Optional[str] = ..., preview_crop: Optional[bool] = ..., fields: Optional[Iterable[str]] = ..., **kwargs) -> None: ...
    def process_args(self, path: str, offset: int, limit: int, sort: Optional[str], preview_size: Optional[str], preview_crop: Optional[bool], fields: Optional[Iterable[str]]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> TrashResourceObject: ...

class RestoreTrashRequest(APIRequest):
    url: str
    method: str
    success_codes: Incomplete
    def __init__(self, session: requests.Session, path: str, dst_path: Optional[str] = ..., force_async: bool = ..., overwrite: bool = ..., fields: Optional[Iterable[str]] = ..., **kwargs) -> None: ...
    def process_args(self, path: str, dst_path: Optional[str], force_async: bool, overwrite: bool, fields: Optional[Iterable[str]]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> Union[OperationLinkObject, ResourceLinkObject]: ...

class DeleteTrashRequest(APIRequest):
    url: str
    method: str
    success_codes: Incomplete
    def __init__(self, session: requests.Session, path: Optional[str] = ..., force_async: bool = ..., fields: Optional[Iterable[str]] = ..., **kwargs) -> None: ...
    def process_args(self, path: Optional[str], force_async: bool, fields: Optional[Iterable[str]]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> Optional[OperationLinkObject]: ...

class LastUploadedRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, limit: int = ..., media_type: Optional[Union[str, Iterable[str]]] = ..., preview_size: Optional[str] = ..., preview_crop: Optional[bool] = ..., fields: Optional[Iterable[str]] = ..., **kwargs) -> None: ...
    def process_args(self, limit: int, media_type: Optional[str], preview_size: Optional[str], preview_crop: Optional[bool], fields: Optional[Iterable[str]]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> LastUploadedResourceListObject: ...

class CopyRequest(APIRequest):
    url: str
    method: str
    success_codes: Incomplete
    def __init__(self, session: requests.Session, src_path: str, dst_path: str, overwrite: bool = ..., force_async: bool = ..., fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def process_args(self, src_path: str, dst_path: str, overwrite: bool, force_async: bool, fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> Union[OperationLinkObject, ResourceLinkObject]: ...

class GetMetaRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, path: str, limit: Optional[int] = ..., offset: Optional[int] = ..., preview_size: Optional[str] = ..., preview_crop: Optional[bool] = ..., sort: Optional[str] = ..., fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def process_args(self, path: str, limit: Optional[int], offset: Optional[int], preview_size: Optional[str], preview_crop: Optional[bool], sort: Optional[str], fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> ResourceObject: ...

class GetUploadLinkRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, path: str, overwrite: bool = ..., fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def process_args(self, path: str, overwrite: bool, fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> ResourceUploadLinkObject: ...

class MkdirRequest(APIRequest):
    url: str
    method: str
    success_codes: Incomplete
    def __init__(self, session: requests.Session, path: str, fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def process_args(self, path: str, fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> ResourceLinkObject: ...

class PublishRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, path: str, fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def process_args(self, path: str, fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> ResourceLinkObject: ...

class UploadURLRequest(APIRequest):
    url: str
    method: str
    success_codes: Incomplete
    def __init__(self, session: requests.Session, url: str, path: str, disable_redirects: bool = ..., fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def process_args(self, url: str, path: str, disable_redirects: bool, fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> OperationLinkObject: ...

class DeleteRequest(APIRequest):
    url: str
    method: str
    success_codes: Incomplete
    def __init__(self, session: requests.Session, path: str, permanently: bool = ..., md5: Optional[str] = ..., force_async: bool = ..., fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def process_args(self, path: str, permanently: bool, md5: Optional[str], force_async: bool, fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> Optional[OperationLinkObject]: ...

class SaveToDiskRequest(APIRequest):
    url: str
    method: str
    success_codes: Incomplete
    def __init__(self, session: requests.Session, public_key: str, name: Optional[str] = ..., path: Optional[str] = ..., save_path: Optional[str] = ..., force_async: bool = ..., fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def process_args(self, public_key: str, name: Optional[str], path: Optional[str], save_path: Optional[str], force_async: bool, fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> Union[OperationLinkObject, ResourceLinkObject]: ...

class GetPublicMetaRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, public_key: str, offset: int = ..., limit: int = ..., path: Optional[str] = ..., sort: Optional[str] = ..., preview_size: Optional[str] = ..., preview_crop: Optional[bool] = ..., fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def process_args(self, public_key: str, offset: int, limit: int, path: Optional[str], sort: Optional[str], preview_size: Optional[str], preview_crop: Optional[bool], fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> PublicResourceObject: ...

class GetPublicDownloadLinkRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, public_key: str, path: Optional[str] = ..., fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def process_args(self, public_key: str, path: Optional[str], fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> ResourceDownloadLinkObject: ...

class MoveRequest(APIRequest):
    url: str
    method: str
    success_codes: Incomplete
    def __init__(self, session: requests.Session, src_path: str, dst_path: str, force_async: bool = ..., overwrite: bool = ..., fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def process_args(self, src_path: str, dst_path: str, force_async: bool, overwrite: bool, fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> Union[OperationLinkObject, ResourceLinkObject]: ...

class FilesRequest(APIRequest):
    url: str
    method: str
    def __init__(self, session: requests.Session, offset: int = ..., limit: int = ..., media_type: Optional[Union[str, Iterable[str]]] = ..., preview_size: Optional[str] = ..., preview_crop: Optional[bool] = ..., sort: Optional[str] = ..., fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def process_args(self, offset: int, limit: int, media_type: Optional[Union[str, Iterable[str]]], sort: Optional[str], preview_size: Optional[str], preview_crop: Optional[bool], fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> FilesResourceListObject: ...

class PatchRequest(APIRequest):
    url: str
    method: str
    content_type: str
    def __init__(self, session: requests.Session, path: str, properties: dict, fields: Optional[Fields] = ..., **kwargs) -> None: ...
    def prepare(self, *args, **kwargs) -> None: ...
    def process_args(self, path: str, properties: dict, fields: Optional[Fields]) -> None: ...
    def process_json(self, js: Optional[dict], yadisk: Optional['YaDisk'] = ...) -> ResourceObject: ...
