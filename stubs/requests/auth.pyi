from ._internal_utils import to_native_string as to_native_string
from .compat import basestring as basestring, str as str, urlparse as urlparse
from .cookies import extract_cookies_to_jar as extract_cookies_to_jar
from .utils import parse_dict_header as parse_dict_header
from _typeshed import Incomplete

CONTENT_TYPE_FORM_URLENCODED: str
CONTENT_TYPE_MULTI_PART: str

class AuthBase:
    def __call__(self, r) -> None: ...

class HTTPBasicAuth(AuthBase):
    username: Incomplete
    password: Incomplete
    def __init__(self, username, password) -> None: ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __call__(self, r): ...

class HTTPProxyAuth(HTTPBasicAuth):
    def __call__(self, r): ...

class HTTPDigestAuth(AuthBase):
    username: Incomplete
    password: Incomplete
    def __init__(self, username, password) -> None: ...
    def init_per_thread_state(self) -> None: ...
    def build_digest_header(self, method, url): ...
    def handle_redirect(self, r, **kwargs) -> None: ...
    def handle_401(self, r, **kwargs): ...
    def __call__(self, r): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
