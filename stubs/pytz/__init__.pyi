import datetime
from _typeshed import Incomplete
from pytz.exceptions import AmbiguousTimeError as AmbiguousTimeError, InvalidTimeError as InvalidTimeError, NonExistentTimeError as NonExistentTimeError, UnknownTimeZoneError as UnknownTimeZoneError
from pytz.lazy import LazyDict
from pytz.tzinfo import BaseTzInfo as BaseTzInfo

OLSEN_VERSION = OLSON_VERSION
unicode = str

def timezone(zone): ...

class UTC(BaseTzInfo):
    zone: str
    def fromutc(self, dt): ...
    def utcoffset(self, dt): ...
    def tzname(self, dt): ...
    def dst(self, dt): ...
    def __reduce__(self): ...
    def localize(self, dt, is_dst: bool = ...): ...
    def normalize(self, dt, is_dst: bool = ...): ...

utc: Incomplete

class _CountryTimezoneDict(LazyDict):
    def __call__(self, iso3166_code): ...

country_timezones: Incomplete

class _CountryNameDict(LazyDict): ...

country_names: Incomplete

class _FixedOffset(datetime.tzinfo):
    zone: Incomplete
    def __init__(self, minutes) -> None: ...
    def utcoffset(self, dt): ...
    def __reduce__(self): ...
    def dst(self, dt): ...
    def tzname(self, dt) -> None: ...
    def localize(self, dt, is_dst: bool = ...): ...
    def normalize(self, dt, is_dst: bool = ...): ...

def FixedOffset(offset, _tzinfos=...): ...

all_timezones: Incomplete
all_timezones_set: Incomplete
common_timezones: Incomplete
common_timezones_set: Incomplete
