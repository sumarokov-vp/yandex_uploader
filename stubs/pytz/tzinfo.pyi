import abc
from _typeshed import Incomplete
from datetime import tzinfo
from pytz.exceptions import AmbiguousTimeError as AmbiguousTimeError, NonExistentTimeError as NonExistentTimeError

def memorized_timedelta(seconds): ...
def memorized_datetime(seconds): ...
def memorized_ttinfo(*args): ...

class BaseTzInfo(tzinfo, metaclass=abc.ABCMeta):
    zone: Incomplete

class StaticTzInfo(BaseTzInfo):
    def fromutc(self, dt): ...
    def utcoffset(self, dt, is_dst: Incomplete | None = ...): ...
    def dst(self, dt, is_dst: Incomplete | None = ...): ...
    def tzname(self, dt, is_dst: Incomplete | None = ...): ...
    def localize(self, dt, is_dst: bool = ...): ...
    def normalize(self, dt, is_dst: bool = ...): ...
    def __reduce__(self): ...

class DstTzInfo(BaseTzInfo):
    zone: Incomplete
    def __init__(self, _inf: Incomplete | None = ..., _tzinfos: Incomplete | None = ...) -> None: ...
    def fromutc(self, dt): ...
    def normalize(self, dt): ...
    def localize(self, dt, is_dst: bool = ...): ...
    def utcoffset(self, dt, is_dst: Incomplete | None = ...): ...
    def dst(self, dt, is_dst: Incomplete | None = ...): ...
    def tzname(self, dt, is_dst: Incomplete | None = ...): ...
    def __reduce__(self): ...

def unpickler(zone, utcoffset: Incomplete | None = ..., dstoffset: Incomplete | None = ..., tzname: Incomplete | None = ...): ...
